# ROBOT : 'iiwa' 
# TASK  : 3D position target reaching


# MPC & sim parameters
simu_freq: 1000        # Simulation frequency in Hz
ctrl_freq: 100        # Control frequency
plan_freq: 100        # Planning frequency
T_tot: 5.              # Simu duration (s)
# Simulation options
DELAY_SIM: False              # Add delay in reference torques (low-level)
DELAY_OCP: False              # Add delay in OCP solution (i.e. ~1ms resolution time)
SCALE_TORQUES: False          # Affine scaling of reference torque
NOISE_TORQUES: False          # Add Gaussian noise on reference torques
FILTER_TORQUES: False         # Moving average smoothing of reference torques
TORQUE_TRACKING: False        # Simulate low-level torque control loop
NOISE_STATE: False            # Add Gaussian noise on the measured state 
FILTER_STATE: False           # Moving average smoothing of reference torques
SAVE_DATA: False               # Save plot_data to npz
RECORD_SOLVER_DATA: False     # Keep trace of Vxx, Riccati gains, reg, Jacobian etc. (more data to save)
INIT_LOG: True                # Initial logs summarizing parameters
init_log_display_time: 1      # How long (s) to display the initial logs ?
LOG: True                     # Logs during simulation
log_rate: 500                 # Display sim status once very 'log_rate' sim cycles
WHICH_PLOTS: ['x','u', 'ee']  # Which plots to generate
RICCATI: True




# General
dt: 0.02                                             # OCP integration step 
N_h: 100                                             # Horizon length in nodes
maxiter: 5                                           # Max number of iterations in DDP
q0: [0.1, 0.7, 0., 0.7, -0.5, 1.5, 0.]               # Initial robot joint configuration
dq0: [0.,0.,0.,0.,0.,0.,0.]                          # Initial robot joint velocity
tau0: [0., -2.3274, 0., 0.012262, 0., -0.010595, 0.] # Initial robot joint torque


# Cost function composition (a.k.a which terms will be actually used in the OCP)
# to select from the list : 'stateReg', 'ctrlReg', 'ctrlRegGrav', 'stateLim', 'ctrlLim'
#                           'force', 'friction', 'translation', 'velocity', 'placement'
WHICH_COSTS: ['translation', 'velocity', 'ctrlRegGrav', 'stateReg', 'stateLim'] 

# Cost function weights and activations
 # 'stateReg' : state regularization  
stateRegWeights: [1., 1., 1., 1., 1., 1., 1., 2., 2., 2., 2., 2., 2., 2.]
stateRegWeight: 0.1
stateRegWeightTerminal: 0.1
stateRegRef: 'DEFAULT'  # 'DEFAULT' = [q0, v0]


 # 'ctrlReg', 'ctrlRegGrav' : torque regularization 
ctrlRegWeights: [1., 1., 1., 1., 2., 1., 1.]
ctrlRegWeight: 0.003
ctrlRegWeightTerminal: 0.003
ctrlRegRef: 'DEFAULT' # DEFAULT = g(q) | NOT used for 'ctrlRegGrav' cost


 # 'translation' : end-effector frame translation 
frameTranslationWeights:  [1., 1., 1.]
frameTranslationWeight: 10.
frameTranslationWeightTerminal: 100. 
frameTranslationRef: [-0.5, -0.5, 0.7]
frameTranslationFrameName: 'contact'  


 # 'velocity' : end-effector frame velocity (translation + rotation)
frameVelocityWeights:  [1., 1., 1., 0., 0., 0.]
frameVelocityWeight: 0.1
frameVelocityWeightTerminal: 10.
frameVelocityRef: [0., 0., 0., 0., 0., 0.]    
frameVelocityFrameName: 'contact'  


 # 'stateLim' : state limits
stateLimWeights: [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]
stateLimWeight: 10.
stateLimWeightTerminal: 10.
coef_xlim: 1.

 # 'ctrlLim' : torque limits
ctrlLimWeights: [1., 1., 1., 1., 1., 1., 1.]
ctrlLimWeight: 10.
coef_ulim: 1.

# armature
armature: [.1, .1, .1, .1, .1, .1, .01]



# # # # # # # # # # # # # # # # # # # # # #
# Low-level simulation (actuation model)  #
# # # # # # # # # # # # # # # # # # # # # #
  # Scaling of desired torque
alpha_min: 0.95
alpha_max: 1.05
beta_min: -0.1
beta_max: 0.1
  # White noise on desired torque and measured state
var_u: [3.0, 3.0, 2.0, 2.0, 1.0, 0.1, 0.1]
var_q: 0.028 #x10
var_v: 0.028 #x10
  # Buffer for torque delay
delay_OCP_ms: 1    # in ms
delay_sim_cycle: 2 # in HF cycles
  # Proportional-integral torque control gains
Kp_low: [.2, .2, .2, .2, .2, .2, .2  ]
Ki_low: [.001, .001, .001, .001, .001, .001, .01]
Kd_low: [.00001, .00001, .00001, .00001, .00001, .00001, .00001]
u_avg_filter_length: 20 #8 # in HF cycles
x_avg_filter_length: 5  #20 #8 # in HF cycles