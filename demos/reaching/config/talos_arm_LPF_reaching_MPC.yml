# ROBOT : 'talos' 
# TASK  : 3D position target reaching
# with Low-Pass-Filter (LPF) in dynamics

# MPC & sim parameters
simu_freq: 1000        # Simulation frequency in Hz
ctrl_freq: 100        # Control frequency
plan_freq: 100        # Planning frequency
T_tot: 5.              # Simu duration (s)
# Simulation options
DELAY_SIM: False                # Add delay in reference torques (low-level)
DELAY_OCP: False                # Add delay in OCP solution (i.e. ~1ms resolution time)
SCALE_TORQUES: False            # Affine scaling of reference torque
NOISE_TORQUES: False            # Add Gaussian noise on reference torques
TORQUE_TRACKING: False        # Simulate low-level torque control loop
FILTER_TORQUES: False          # Moving average smoothing of reference torques
NOISE_STATE: False              # Add Gaussian noise on the measured state 
FILTER_STATE: False            # Moving average smoothing of reference torques
SAVE_DATA: False                # Save plot_data to npz
RECORD_SOLVER_DATA: False      # Keep trace of Vxx, Riccati gains, reg, Jacobian etc. (more data to save)
INIT_LOG: True                 # Initial logs summarizing parameters
init_log_display_time: 1       # How long (s) to display the initial logs ?
LOG: True                      # Logs during simulation
log_rate: 500                  # Display sim status once very 'log_rate' sim cycles
WHICH_PLOTS: ['w']   # Which plots to generate ? ('x':state, 'u':control, 'ee':end-eff, etc.)
RICCATI: True



# General 
LPF_TYPE: 1                            # (0) ZOH (1) Euler (2) exact EMA
f_c: 5                                 # Low-pass filter cut-off frequency
tau_plus_integration: False            # semi-implicit if true, explicit if false
dt: 0.02                               # OCP integration step 
N_h: 200                               # Horizon length in nodes
maxiter: 5                            # Max number of iterations in DDP
q0: [2., 0., 0., 0., 0., 0., 0.]       # Initial robot joint configuration
dq0: [0.,0.,0.,0.,0.,0.,0.]            # Initial robot joint velocity


# Cost function composition (a.k.a which terms will be actually used in the OCP)
# to select from the list : 'stateReg', 'ctrlReg', 'ctrlRegGrav', 'stateLim', 'ctrlLim'
#                           'force', 'friction', 'translation', 'velocity', 'placement'
# WHICH_COSTS: ['translation', 'velocity', 'ctrlRegGrav', 'stateReg'] #, 'stateLim'] 
WHICH_COSTS: ['translation', 'stateLim', 'stateReg', 'ctrlRegGrav']

# Cost function weights and activations
 # 'stateReg' : state regularization  
stateRegWeights: [0., 0., 0., 0., 0., 0. ,0., 2., 2., 2., 2., 2., 2., 2.]
stateRegWeight: 0.001
stateRegWeightTerminal: 0.1
stateRegRef: 'DEFAULT'  # 'DEFAULT' = [q0, v0]

 # 'ctrlReg' : torque regularization 
ctrlRegWeights: [1., 1., 1., 1., 1., 1., 1.]
ctrlRegWeight: 0.001
ctrlRegWeightTerminal: 0.1
ctrlRegRef: 'DEFAULT'  # DEFAULT = g(q) | NOT used for 'ctrlRegGrav' cost

# 'wReg' : unfiltered torque regularization
wRegWeight: 0.00001
wRegRef: 'tau0' # in ['zero', 'tau0' , 'gravity']


# 'wLim' : unfiltered torque limit
wLimWeight: 10.

 # 'translation' : end-effector frame translation 
frameTranslationWeights:  [1., 1., 1.]
frameTranslationWeight: 1.
frameTranslationWeightTerminal: 1. 
frameTranslationRef: [0.3, -0.2, 0.5]
frameTranslationFrameName: 'gripper_left_joint'

 # 'velocity' : end-effector frame velocity (translation + rotation)
frameVelocityWeights:  [1., 1., 1., 0., 0., 0.]
frameVelocityWeight: 0.
frameVelocityWeightTerminal: 1.
frameVelocityRef: [0., 0., 0., 0., 0., 0.]    
frameVelocityFrameName: 'gripper_left_joint'

 # 'stateLim' : state limits
stateLimWeights: [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]
stateLimWeight: 10.
stateLimWeightTerminal: 10.
coef_xlim: 1.

 # 'ctrlLim' : torque limits
ctrlLimWeights: [1., 1., 1., 1., 1., 1., 1.]
ctrlLimWeight: 0.
ctrlLimWeightTerminal: 0.
coef_ulim: 1.

# armature
armature: [.1, .1, .1, .1, .1, .1, .0]


# # # # # # # # # # # # # # # # # # # # # #
# Low-level simulation (actuation model)  #
# # # # # # # # # # # # # # # # # # # # # #
  # Scaling of desired torque
alpha_min: 0.95
alpha_max: 1.05
beta_min: -0.1
beta_max: 0.1
  # White noise on desired torque and measured state
var_u: [3.0, 3.0, 2.0, 2.0, 1.0, 0.1, 0.1]
var_q: 0.028 #x10
var_v: 0.028 #x10
  # Buffer for torque delay
delay_OCP_ms: 1    # in ms
delay_sim_cycle: 1 # in HF cycles
  # Proportional-integral torque control gains
Kp: [.2, .2, .2, .2, .2, .2, .2  ]
Ki: [.001, .001, .001, .001, .001, .001, .01]
Kd: [.00001, .00001, .00001, .00001, .00001, .00001, .00001]
u_avg_filter_length: 20 #8 # in HF cycles
x_avg_filter_length: 5  #20 #8 # in HF cycles