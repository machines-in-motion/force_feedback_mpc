# ROBOT : 'iiwa' 
# TASK  : circle trajectory tracking


# # Goal placement M = ( M_ee.rot @ rpyToMat(0, pi/2, 0) , [0.3, 0., 0.7] )
#   R =
#    -0.918754     0.389418    0.0651533
#     0.388443     0.921061   -0.0275464
#   -0.0707372 -2.41653e-08    -0.997495
#   p = 0.3   0 0.7
# # Starting config for IK (to avoid self-collision solution)
# q_init =  [-0.2263,  0.    , -0.174 , -1.6865,  0.0358,  1.5   , -0.3946]
# # Solution of IK_placement(q_init, M)
# q0 = [-0.1194, -0.1913,  0.0971, -1.3812, -0.008 ,  1.885 ,  0.3739]

# General 
dt: 0.01                                                             # OCP integration step 
N_h: 400                                                             # Horizon length in nodes
maxiter: 100                                                         # Max number of iterations in DDP
q0: [-0.1194, -0.1913,  0.0971, -1.3812, -0.008 ,  1.885 ,  0.3739]  # Initial robot joint configuration
dq0: [0.,0.,0.,0.,0.,0.,0.]                                          # Initial robot joint velocity
WHICH_PLOTS: ['all']

# Cost function composition (a.k.a which terms will be actually used in the OCP)
# to select from the list : 'stateReg', 'ctrlReg', 'ctrlRegGrav', 'stateLim', 'ctrlLim'
#                           'translation', 'velocity',
WHICH_COSTS: ['translation', 'stateReg', 'ctrlRegGrav']  

# Cost function weights and activations
 # 'stateReg' : state regularization  
stateRegWeights: [0., 0., 0., 0., 0., 0., 0., 2., 2., 2., 2., 2., 2., 2.]
stateRegWeight: 0.01
stateRegWeightTerminal: 0.01
stateRegRef: 'DEFAULT'  # 'DEFAULT' = [q0, v0]

 # 'ctrlReg', 'ctrlRegGrav' : torque regularization 
ctrlRegWeights: [1., 1., 1., 1., 1., 1., 1.]
ctrlRegWeight: 0.001
ctrlRegRef: 'DEFAULT'   # DEFAULT = g(q) | NOT used for 'ctrlRegGrav' cost

 # 'translation' : end-effector frame translation 
frameTranslationWeights:  [1., 1., 1.]
frameTranslationWeight: 100.
frameTranslationWeightTerminal: 100.
frameTranslationRef: 'DEFAULT' 
frameTranslationFrameName: 'contact' 
frameCircleTrajectoryRadius: 0.1     # in m
frameCircleTrajectoryVelocity: 3.    # in rad/s
CIRCLE_LOCAL_PLANE: 'XY'             # LOCAL plane in which the circle lies


# armature
armature: [.1, .1, .1, .1, .1, .1, .0]