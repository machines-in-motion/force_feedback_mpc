# MPC parameters for end-effector circle force task
# + PyBullet or Raisim simulation

# MPC & sim parameters
simu_freq: 2000               # Simulation frequency in Hz
ctrl_freq: 1000               # Control frequency
plan_freq: 500                # Planning frequency
T_tot: 10.                     # Simu duration (s)n (s)
# Simulation options
DELAY_SIM: True                 # Add delay in reference torques (low-level)
DELAY_OCP: True                 # Add delay in OCP solution (i.e. ~1ms resolution time)
SCALE_TORQUES: True             # Affine scaling of reference torque
NOISE_TORQUES: True             # Add Gaussian noise on reference torques
NOISE_STATE: True               # Add Gaussian noise on the measured state 
STATIC_FRICTION: True           # Simulate static friction torque
VISCOUS_FRICTION: True          # Simulate viscous friction torque
TORQUE_TRACKING: True           # Low-level torque tracking with a PI controller
SAVE_DATA: True                 # Save plot_data to npz
RECORD_SOLVER_DATA: True       # Keep trace of Vxx, Riccati gains, reg, Jacobian etc. (more data to save)
INIT_LOG: True                  # Initial logs summarizing parameters
init_log_display_time: 1        # How long (s) to display the initial logs ?
LOG: True                       # Logs during simulation
log_rate: 1000                  # Display sim status once very 'log_rate' sim cycles
WHICH_PLOTS: ['control', 'state', 'force', 'solver', 'ee']   # Which plots to generate after the simulation
TILT_SURFACE: True              # Tilt contact surface 
TILT_PITCH_LOCAL_DEG: -6.      # Tilt angle of the contact surface
RICCATI: False                # Interpolate torque command using Riccati gains
DISPLAY_EE: False             # Display target and actual EE position as balls in PyBullet

# Start of the reaching phase
T_REACH: 0.
# Start of the tracking phase
T_TRACK: 0.5
# Start of the contact phase
T_CONTACT: 1.
# End of ramp
T_RAMP: 2.
# Start of the circle tracking phase
T_CIRCLE: 3.






# General 
SOLVER: 'sqp'                                      # Solver (fddp or sqp)
use_filter_line_search: True                       # Filter line-search ? 
solver_termination_tolerance: 0.0001               # Tolerance on KKT residual 
dt: 0.003                                          # OCP integration step 
N_h: 5                                             # Horizon length in nodes
maxiter: 8                                         # Max number of iterations in DDP
solver_termination_tolerance: 0.0001               # Tolerance on KKT residual 
q0: [0., 1.0471975511965976, 0., -1.1344640137963142, 0.2,  0.7853981633974483]               # Initial robot joint configuration
dq0: [0.,0.,0.,0.,0.,0.]                         # Initial robot joint velocity

# LPF 
LPF_TYPE: 0                            # (0) ZOH (1) Euler (2) exact EMA
f_c: 50                                # Low-pass filter cut-off frequency (5,50)
tau_plus_integration: False            # semi-implicit if true, explicit if false

# Pin model frame name of the end-effector 
#   - Used for frame-related costs and plots generation
#   - Overrides the frame name 'DEFAULT' values below
frame_of_interest: 'contact'


# List RIGID CONTACT models
contacts:
  - {
      contactModelFrameName: 'contact',                   # frame name in pinocchio model
      pinocchioReferenceFrame: 'LOCAL_WORLD_ALIGNED',     # LOCAL, WORLD, LOCAL_WORLD_ALIGNED
      contactModelType: '1Dz',                             # 1Dx, 1Dy, 1Dz, 3D, 6D
      contactModelTranslationRef: '',                     #[0.7, 0.0, 0.0],       # 3d vector
      contactModelRotationRef: '',                        # 3d matrix
      contactModelGains: [0, 10],                         # Baumgarte stabilization gains
      active: False                                       # Initially active? 
    }
contactPosition: [0.65, 0., 0.01]  
oPc_offset: [0., 0., -0.00]  # just table
contactFrameName: 'contact'
contactType: '1Dz'    
pinRefFrame: 'LOCAL_WORLD_ALIGNED' 


USE_LATERAL_FRICTION: False

# Cost function composition (a.k.a which terms will be actually used in the OCP)
# to select from the list : 'stateReg', 'ctrlReg', 'ctrlRegGrav', 'stateLim', 'ctrlLim'
#                           'force', 'friction', 'translation', 'velocity', 'placement'
WHICH_COSTS: ['force', 'translation', 'velocity', 'stateReg', 'ctrlRegGrav', 'rotation']  

# Cost function weights and activations
 # 'force' : end-effector frame force (translation + rotation)
frameForceWeights:  [1, 1., 1, 0., 0., 0.]
frameForceWeight: 1000.
frameForceRef: [0., 0., 50, 0., 0., 0.]    
frameForceFrameName: 'contact'


 # 'stateReg' : state regularization  
stateRegWeights: [10., 10., 40., 10., 10., 50, 2., 2., 2., 2., 2., 2.]
stateRegWeight: 0.02 
stateRegWeightTerminal: 0.02
stateRegRef: 'DEFAULT'


 # 'ctrlReg', 'ctrlRegGrav' : torque regularization 
ctrlRegGravWeights: [1., 1., 1., 1., 1., 1.]
ctrlRegGravWeight: 0.0001
ctrlRegGravWeightTerminal: 0.0001

# 'wReg' : unfiltered torque regularization
wRegWeight: 0.000000001
wRegRef: 'zero'

# 'wLim' : unfiltered torque limit
wLimWeight: 0


 # 'translation' : end-effector frame translation 
frameTranslationWeights:  [1., 1., 1.]
frameTranslationWeight: 65 #65.
frameTranslationWeightTerminal: 600.
alpha_quadflatlog: 0.01
frameTranslationRef: 'DEFAULT'
frameTranslationFrameName: 'contact'
frameCircleTrajectoryRadius: 0.07  # in m
frameCircleTrajectoryVelocity: 3 # in rad/s
numberOfRounds: 10
CIRCLE_LOCAL_PLANE: 'XY'


 # 'velocity' : end-effector frame velocity (translation + rotation)
frameVelocityWeights:  [1., 1., 1., 1., 1., 1.]
frameVelocityWeight: 0.05
frameVelocityWeightTerminal: 1.
frameVelocityRef: 'DEFAULT'    
frameVelocityFrameName: 'contact'


 # 'rotation' : end-effector frame orientation
frameRotationWeights:  [1., 1., 1.]
frameRotationWeight: 10. #0.05
frameRotationWeightTerminal: 10. #0.1 #1.
frameRotationRef: 'DEFAULT'
frameRotationFrameName: 'contact'


# # # # # # # # # # # # # # # # # # # # # #
# Low-level simulation (actuation model)  #
# # # # # # # # # # # # # # # # # # # # # #
  # Scaling of desired torque
alpha_min: 0.8
alpha_max: 1.2
beta_min: 2.
beta_max: 2.
  # White noise on desired torque and measured state
var_u: [0.03, 0.03, 0.02, 0.02, 0.01, 0.01]
var_q: 0.001 
var_v: 0.001 
var_aug: [0., 0., 0., 0., 0., 0.]
  # Buffer for torque delay
delay_OCP_ms: 5    
delay_sim_cycle: 1 
  # Static & viscous friction
static_friction_max_torque: 1.
viscous_friction_slope: 0.5
  # Proportional-integral torque control gains
Kp_low: [0.07, 0.07, 0.07, 0.07, 0.07, 0.07]
Ki_low: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05]
Kd_low: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]